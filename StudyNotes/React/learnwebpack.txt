webpack

I.概念

	1.什么是webpack？
	
		webpack是一个JS静态模块打包工具，它会根据依赖关系，生成一个或者多个bundle.js(bundle意为'包' )
		
		
	2.webpack核心概念
	
		a.入口(entry)
		
			入口起点指示应该使用哪个模块作为构建的起点。从这个文件出发，解决并寻找依赖
			
			默认值是./src/index.js
			
			可以自定义配置:webpack.config.js文件中配置entry属性
		
		b.输出(output)
		
			output属性告诉webpack在哪里输出它所创建的bundle.js,以及如何命名
			
			默认值是:  主文件: ./dist/main.js  其他文件:./dist
		
		c.loader
		
			loader可以让webpack处理非JS的文件，并且先将他们转换为有效的js模块，然后添加到依赖图中
			
			注意：loader 能够 import 导入任何类型的模块（例如 .css 文件），这是 webpack 特有的功能，
			
			其他打包程序或任务执行器的可能并不支持。我们认为这种语言扩展是有很必要的，因为这可以使开发人员创建出更准确的依赖关系图。
			
			“嘿，webpack 编译器，当你碰到「在 require()/import 语句中被解析为 '.txt' 的路径」时，在你对它打包之前，先使用 raw-loader 转换一下。”
			
		d.插件
		
			webpack插件可以让webpack执行更广的任务
			
			想要使用一个插件，你只需要 require() 它，然后把它添加到 plugins 数组中。
			

			
