Servlet/JSP

一个高级的"HelloServlet"
1.什么是Servlet?

  sun公司制定的一种用来扩展Web服务器功能的组件规范
  运行在服务器上的一个Java类


  a.扩展Web服务器功能

     web服务器通常只能够处理静态资源请求，(即需要事先将html文件准备好)，可以使用servlet来扩展(即web服务器可以通过调用servlet来处理动态资源请求，比如访问数据库). 


    浏览器发出请求-->web服务器判断是否有动态请求-->动态请求调用servlet来参与计算(不能直接调用，要先调用容器)-->容器调用servlet(servlet就是个组件)



    ・为什么不直接调用servlet?
     容器提供了一些基础服务(比如网络相关的服务)



  b.组件规范

    1)什么是组件？
      符合一定规范，实现部分功能的，并且需要部署到相应的容器里面才能运行的软件模块。
      servlet是一个组件，需要部署到相应的servlet容器里面才能运行

 
    2)什么是容器？
      符合一定规范，提供组件的运行环境。
      servlet只有放在容器中才有价值
      eg: tomcat就是一个容器，提供了servlet的运行环境
     

2.如何写一个servlet?

  步骤：
 
  1)写一个java类，实现Servlet接口或者继承一个抽象类HttpServlet
    注：通常使用继承的方式。

  2)编译
  
  3)打包(把它变成一个组件)
    创建一个具有如下结构的文件夹：
    |-appname(自定义，通常为应用名)
    |--WEB-INF(固定的)
    |---classes(固定的命名，放.class文件)
    |---lib(可选，放jar文件)
    |---web.xml(部署描述文件)
    用eclipse开发的话这一步开发工具会自动建文件夹。
        
   4)部署
     将第三步创建好的文件夹拷贝到servlet容器webapps下
     注：可以使用jar命令将第三步创建的文件夹压缩成一个.war为后缀的文件，然后拷贝。

   5)启动容器，访问servlet

     http://ip:port/appname/url-pattern
     http://localhost:8080/firstweb/hello

      通过http协议访问容器
      ip为容器的ip(即服务器的IP地址)
      port为端口号
      appname为第三部创建的文件名
      url-pattern在web.xml文件中定义
              
3.Tomcat的安装  (www.apache.org)
   
   步骤：

     1.解压安装文件

     2.配置环境变量
        a.配置JDK
        JAVA_HOME:jdk的安装路径 (必须配置)  
        	C:\Program Files\Java\jdk1.7.0
          打开PATH，添加变量值：%JAVA_HOME%\bin
        b.配置TOMCAT
        CATALINA_HOME:tomcat的安装路径  
        新建变量名：CATALINA_HOME，变量值：C:\tomcat
        打开PATH，添加变量值：%CATALINA_HOME%\bin
        
        
   
     3.启动Tomcat
       若启动失败，可能与其他的端口冲突，需要修改端口。

     4.关闭TomCat
    

      --->Tomcat常见问题：

          卸载时如果直接删除主目录，则再次安装时服务会安装失败，解决办法，cmd输入：sc delete tomcat7
		  闪退问题：1.环境变量（JAVA_HOME/CATALINA_HOME）
					2.bin目录下service启动一下服务

4.servlet是如何运行的？
  比如，在浏览器地址栏输入
  http://ip:port/web01/hello 

  1.建立连接

   浏览器的通信模块通过IP和端口号向Tomcat发送请求，Tomcat持续监听端口来处理请求。

  2.打包

   通过http协议制作一个数据包

  3.发送请求

   把请求数据包传给服务器

  4.解析数据包

  5.创建对象

    把解析完的数据存放在request对象里面，容器本身不能处理请求，需要调用servlet处理请求，如何区分调用哪个servlet呢？
    在输地址的时候http://ip:port/appname/hello，根据appname找到对应的文件夹，并找到描述文件.xml，在描述文件中通过url-pattern：/hello来找到对应的servlet类的字节码文件，然后调用该类的构造器来创建servlet对象,即第六步

  6.Tomcat容器创建Servlet对象

  7.容器创建的Servlet对象调用service(把request对象,response对象传进来);

  ・8.获取参数(这三步是程序员写)

  ・9.做出相应的处理

  ・10.输出response

  11.容器从response取处理结果

  12.打包发回给浏览器

  13.浏览器解析页面生成DOM树 生成页面

  -->总结：

     1.浏览器依据ip,port建立连接
     2.浏览器将相关数据(请求参数)打包,然后发送请求
     3.容器(Tomcat)解析请求数据包，将解析得到的数据封装到request对象里面，并且同时创建一个response对象
     4.容器创建servlet对象,然后调用该对象的service方法
        注：容器会将request和response作为参数传进来，可以request获得请求参数，也可以将处理结果写到response
     5.容器读取response中的处理结果，然后将处理结果打包发送给浏览器
     6.浏览器解析响应数据包

5.常见问题

     1.404
       注：404是一个状态码(是一个三位数字，由w3c定义,
           表示服务器处理请求的一种状态)
       1)含义：服务器依据请求地址找不到相应的资源 
       2)产生的原因：
          a.没有部署该应用
          b.<servlet-name>不一致
          c.请求地址写错
             检查 http://ip:port/appname/url-pattern
     2.500
       1)含义：系统出错
       2)产生的原因：
          程序在运行当中出错。
          a.没有继承HttpServlet
          b.<servlet-class>中的类名写错
          c.代码写得不够严谨
     3.405
       1)含义：找不到处理方法
       2)产生的原因：
           service方法不规范

   --->http://localhost:8080/web01/hello?qty=100
         qty=100 qty是参数,100是参数值 写在问号后面
         在服务器端通常要对请求参数做一些检查，比如检查qty是
         不是一个合法的数字
       获取参数的方法：
       String qty = request.getParameter("qty");









